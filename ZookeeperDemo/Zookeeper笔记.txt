

Zookeeper是什么
分布式开源框架，分布式服务的协调工具

应用场景
1.统一命名服务  +Dubbo
dubbo(rpc远程调用框架) + zookeeper(注册中心)(命名服务)
2.发布订阅--watcher，对zookeeper节点发生改变，都会有事件通知
3.负载均衡----集群
4.分布式通知watcher
5.master选举
6.zookerper分布式锁,redis分布式锁，springcloud分布式锁
7.zookeeper分布式配置中心



Zookeeper数据结构
先把zp看成以节点方式存储东西的工具，类似xml树型节点存数据的东西
zookeeper节点名称不允许重复
节点类型分为四种节点
持久节点:永久保存硬盘上，zk关闭，节点不会删除
持久节点顺序节点：节点有编号
临时节点：声明周期绑定，连接断开，节点信息直接删除
临时顺序节点：

节点watcher---节点事件通知
使用事件监听，获取到节点发生改变，新增、删除、修改，都会有事件通知

分布式锁：就是一个临时节点


zookeeper集群
有leader和follower



面试必问：
zp底层实现原理：临时节点+事件通知
1.使用zk创建临时节点("path")
2.哪个服务器能创建节点成功，谁就能拿到锁，谁能拿到锁，就能执行代码，如生成订单号，其他服务器没有创建节点成功就一直等待
其他服务器使用事件监听
3.什么时候释放锁，zk断开连接，临时节点就会自动被删掉，锁就释放了
其他服务器使用事件监听，监听到节点被删除，就去获取锁的资源
-------------------------------------------
zk事件通知发送延时情况下，怎么处理？

2.怎么使用zk实现分布式锁？
创建临时节点，谁能创建临时节点就能获取锁，怎么释放锁，连接关闭

3.zookeeper实现选举策略-----可以作为redis哨兵机制的选举投票策略
多台服务器创建临时节点，谁能够创建临时节点，谁就为主，如果主服务器宕机，临时节点就是被删掉
，从服务器谁能创建临时节点，谁就能成为主
