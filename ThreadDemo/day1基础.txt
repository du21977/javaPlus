
进程和线程：
一般而言，一个应用程序就是一个进程，而一个进程中有多个线程(至少有一个main主线程)，主线程和子线程
进程是所有线程的集合，每个线程是进程的一条执行路径

为什么要使用多线程：
就是提高程序的执行效率(工地板砖，5个人同时进行肯定比一个人效率高)
举例子：迅雷多线程下载(包括多线程下载一个文件)，Android中图片框架和网络请求框架中都用到了线程池

同步：必须等上一个人执行完我才能执行，代码从上往下执行
异步：多线程，不同的线程的代码可以同时执行，单个线程出现异常，其他线程不会受影响，不同线程竞争抢CPU


是使用Thread 还是 Runnable
答：使用Runnable接口，因为接口可以实现多继承，一个类extends一个类，而一个类可以implments多个接口
class Thread implements Runnable {Thread实现了runnable接口

匿名内部类：
就是没有名字的类，也就是没有返回结果对象的类，直接new就行，Android中用的多，可以节省内存，因为返回结果要存栈内存

子线程中不能抛异常，只能try...catch...

sleep作用：让当前线程的运行状态变为休眠状态，当时间到期，线程由休眠状态变成运行状态
sleep不能释放锁，多线程wait释放锁
sleep属于线程，调用要用Thread.sleep();
wait属于Object,直接使用wait()就行

Thread中要知道线程id和名字可以直接调用getId()和getName()
在Runnable要调用Thread.currentThread().getName()


线程的五种状态
新建状态：只是new Thread(),此时线程处于新建状态，程序还没运行
就绪状态：线程调用start()处于就绪，等待CPU分配权限
运行状态：线程执行run方法里面的代码，就处于运行状态
阻塞状态：调用sleep()或者尝试得到锁,线程处于阻塞状态，时间过期，线程走就绪状态再走运行状态
死亡状态：run方法里面代码走完了，线程就会被停止

