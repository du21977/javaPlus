
面试题：
------------------------------多线程相关--------------------------------
1.多线程安全问题
多线程共享全局变量，做写操作时，会有线程安全问题
2.lock与synchronized区别
自动挡和手动挡
3.线程池
4.线程间通讯
5.ThreadLocal
每个线程都有自己的局部变量，而不让线程出现线程安全问题
6.volatile
线程可见和禁止重排序
7.java并发包
Lock、Exectors、ReentrantLock、Condition、ConcurrentHashMap、BlockQueue、AtomicInteager
8.多线程实际使用场景
主线程和gc线程，多线程下载图片
9.锁
分布式锁zookeeper


----------------------------消息中间件MQ相关------------------------------------
重试机制、日志补偿机制、幂等性问题


-----------------------------高并发解决方案------------------------------------
缓存：redis
数据库：读写分离、分库分表、SQL优化
服务器：负载均衡、CDN加速
JVM：并行垃圾回收、初始内存与最大内存设置成一致
代码层：算法优化

----------------------------------分布式缓存redis相关-------------------------------------------

-------------------------------------数据库相关---------------------------------------------------

---------------------------------------JVM相关-------------------------------------------------


--------------------------------------最大难题最大收获--------------------------------------------------------
我们项目现在采用目前流行的技术，微服务架构(把一个项目拆分成很多子项目，每个项目之间互不影响)，服务与服务之间采用
RPC通讯调用，对分布式各种常见问题解决方案，都很熟悉
项目中在订单调用支付模块时，可能会产生分布式事务-----解决方案--TCC---LCN
生成订单id时，在集群环境下，可能产生重复的id，这时就要用到分布式锁
分布式job，
对分布式微服务、高并发、高可用、性能优化，缓存、消息中间件，并发编程相对比较熟悉