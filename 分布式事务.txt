
1.分布式事务解决方案
2pc(两段提交协议)
3pc(三段提交协议)
MQ(补偿机制、重试机制)，全局id+日志记录解决幂等性问题,缺点占用资源，延迟，幂等问题

分布式事务就是解决两端数据一致性问题

什么是事务，事务的特性，事务的隔离级别
事务特性：acid(原子性、一致性、隔离性、持久性)
隔离级别：脏读、可重复读、更新丢失、读取已未提交

分布式事务产生的原因
分布式微服务项目，每个服务与服务之间都有自己的独立数据库
一段代码中操作两个数据库，万一后面出现异常，怎么办
回滚，每个数据库都有不同的数据源，怎么回滚


CPA理论：数据一致性、服务可用性(响应，不能一直等待)、分区容错(当某个节点发生故障，也能保证数据一致性)
Base理论：基本可用(系统故障的情况下，服务降级)、软状态(当接口使用的时候，不能影响整个服务)、最终一致性

1.2pc(两段提交协议)
2.3pc(三段提交协议)
3.全局事务：
4.本地事务：
5.XA接口：
6.jta


----------------------------------------------------------------
LCN解决分布式事务问题  -----如支付服务调用订单服务
LCN框架是一个分布式事务解决框架，他不是生产事务，而是事务协调者，
他相当于发起方(支付服务)调用别的服务接口的时候，会在tx-manager上创建一个分组id,发起方也会在重写feign接口，
在请求头中会把这个分组id传递给参与方(订单服务)，参与方在请求头中拿到分组id后，就会认为要跟别人做协调了，
就不会真正关闭jdbc了，会一直等待，不会去提交事务，当发起方代码走到没有任何问题的情况下，发起方再通知协调者，
让协调者再去通知参与者是回滚还是提交，
如果协调者出错的话，协调者自己不会提交事务，就参与者自己需要回滚了

说白了，LCN分布式事务就是为了解决，如果发起者这边代码正常或者出错，怎样通知参与者提交或回滚,就是让协调者来通知


