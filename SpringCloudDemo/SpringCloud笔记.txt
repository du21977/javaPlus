分布式与分模块开发的区别
分布式开发是：将一个项目拆分成不同的项目进行部署开发，使用http进行通讯--微服务，
            每个子项目使用rpc远程调用技术
分布式开发作用：解耦，代码复用
缺点：网络延迟，

分模块，将一个项目拆分成父工程、子工程，通过jar通讯

集群：将一个项目，相同的功能部署在不同的服务器上，是为了解决高并发，减轻单台服务器的压力

你用过哪些rpc远程调用框架？http协议+json
SpringCloud,Dubbo

面向服务架构，SOA，通讯协议SOAP,SOAP http协议+xml序列化与反序列化
银行使用webservice,互联网现在流行微服务架构

微服务架构也属于分布式架构，SpringCloud
轻量级，通讯协议http协议+rest风格+json
分成很多小服务，如会员服务，支付服务，订单服务，每个服务都是独立运行，每个服务对应一个数据库
每个工程都通过RPC远程调用服务接口

微服务架构和面向服务架构区别：
面向服务架构(SOA):主要针对银行，xml格式，企业级，重量级
微服务系统：会更加细分，通讯方式http+json+restful，轻量级，独立运行

-----------------------------------------------------------------------------------------
SpringCloud-----微服务解决方案
接口地址怎么管理，容错机制，负载均衡，网关接口，路由策略，高并发情况下接口怎么限流，断路

SpringCloud解决什么问题？
配置管理，注册中心eureka(Dubbo的注册中心是zookeeper,作用管理服务),服务发现，服务注册，客户端调用服务(rest,feign，这两个底层通过httpclent调用地址访问)
断路器(接口调用失败怎么解决)，路由策略，负载均衡(ribbon)，全局锁，分布式会话，接口网关(zuul)，服务管理系统
rpc远程调用
SpringBoot与SpringCloud关系
SpringBoot简化xml配置，快速整合框架
SpringCloud是一套微服务解决方案--RPC远程调用
SpringCloud依赖SpringBoot

-----------------------------------------------------------
SpringCloud调用服务原理



